It finally works! For my test command as shown above, it copies the files and finishes with the output:

```
sent 15975874 bytes  received 680 bytes  541578.10 bytes/sec
total size is 15971885  speedup is 1.00

Transferred 30 files for 2023-03-27
Total files transferred: 30
```

Thanks. Now, the rsync command it generates is pretty lengthy having an `--include` for each specific file. I'm thinking it might be better to still have one rsync command per day, but have a more optimized `--include` pattern? This might not actually be possible to be more concise and yet still correct, so let me know if you can't think of any improvement there.

ALSO: Make the following changes:
- Still create the top-level directory for the date range, but store the photos in a child directory within called "stills".
- During the transfer, if it fails for any reason (e.g. the network drive is unavailable), print a suitable error message to stderr.
- Once all photos are transferred (and if the expected number of photos were transferred and there were no errors), run an ffmpeg command to generate a timelapse from it.
  - The timelapse should be saved as an mov file inside the top directory (next to "stills") with the same filename as the top directory's name, prefixed with "timelapse_". Example: "timelapse_2023_03_01-2023_03_08.mov".
  - The timelapse should be 1080p, which is the same as the jpegs.
  - The codec should be H.264.
  - Run fmpeg verbosely.
  - Don't do the ffmpeg step at all if we pass in the launch param "--no-video"
